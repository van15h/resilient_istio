local development
$ mkvirtualenv -a ~/resilient_istio -p ~/.pyenv/versions/3.7.2/bin/python3 resilient_istio

install pylint for VSCode

install requirements
$ pip3 install -r requirements.txt

add autocomplete permanently to your bash
$ echo "source <(kubectl completion bash)" >> ~/.bashrc

shorthand alias for kubectl that also works with completion (put in .bashrc):
  alias k=kubectl
  complete -F __start_kubectl k

---
minikube start -p airport --kubernetes-version=v1.15.7

---
get client and server version information
$ kubectl version

kubectl cluster-info

kubectl get namespaces
kubectl get pods -n istio-system
kubectl get svc istio-ingressgateway -n istio-system
kubectl get pods --watch
kubectl get pod -l app=alerts

kubectl describe pods customer-6564ff969f-jqkkr

kubectl scale deploy cpanel-v3 --replicas=3

#to update image, or just delete deployment
kubectl scale deploy cpanel-v1 --replicas=0
kubectl scale deploy cpanel-v1 --replicas=1
kubectl scale deploy cpanel-v2 --replicas=0
kubectl scale deploy cpanel-v2 --replicas=1

stream all pod's logs with label name=myLabel (stdout)
$ kubectl logs -f -l name=myLabel --all-containers

kubectl logs nginx
kubectl logs -f nginx

monitoring
kubectl logs -f -l app=alerts -c alerts

kubectl delete pod,service baz foo
kubectl delete deployment,services --all -n default
kubectl delete deployment,services -l project=airport

$ curl -I -HHost:example.com http://$INGRESS_HOST:$INGRESS_PORT/status

kubectl get virtualservice cpanel -o yaml
kubectl describe pods alerts-pod | grep 'Liveness\|Readiness'

docker stats --format "table {{.Name}}\t{{.CPUPerc}}\t{{.MemUsage}}" | grep 'k8s_cpanel\|k8s_collector\|k8s_alerts\|k8s_camera-agent-1\|k8s_face-recognition\|k8s_image-analysis\|k8s_camera-agent-2\|k8s_section-1'

kiali
  istio-1.4.3/bin/istioctl dashboard kiali
  admin admin

grafana
  kubectl -n istio-system port-forward $(kubectl -n istio-system get pod -l app=grafana -o jsonpath='{.items[0].metadata.name}') 3000:3000 &

  http://localhost:3000/dashboard/db/istio-mesh-dashboard

  # Remove any kubectl port-forward processes that may be running:
    killall kubectl

  load:
    for i in {1..100}; do sleep 0.2; curl -I http://192.168.99.113:31221/status; done


istio-1.4.3/bin/istioctl validate -f istio/fault_injection.yaml
istio-1.4.3/bin/istioctl x analyze -k